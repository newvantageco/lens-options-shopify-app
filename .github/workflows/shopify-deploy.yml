name: Shopify App Deployment

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  NODE_VERSION: '18'
  SHOPIFY_CLI_VERSION: '3.50.0'

jobs:
  deploy-shopify-app:
    name: Deploy Shopify App
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd frontend && npm ci

      - name: Build frontend
        run: cd frontend && npm run build

      - name: Setup Shopify CLI
        run: |
          npm install -g @shopify/cli@${{ env.SHOPIFY_CLI_VERSION }}
          npm install -g @shopify/theme@${{ env.SHOPIFY_CLI_VERSION }}

      - name: Configure Shopify CLI
        run: |
          shopify config set --shop=${{ secrets.SHOPIFY_SHOP_DOMAIN }}
        env:
          SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}

      - name: Deploy to Shopify
        run: |
          shopify app deploy
        env:
          SHOPIFY_API_KEY: ${{ secrets.SHOPIFY_API_KEY }}
          SHOPIFY_API_SECRET: ${{ secrets.SHOPIFY_API_SECRET }}
          SHOPIFY_SCOPES: ${{ secrets.SHOPIFY_SCOPES }}

      - name: Generate app URL
        id: app-url
        run: |
          echo "url=https://${{ secrets.SHOPIFY_SHOP_DOMAIN }}/admin/apps/${{ secrets.SHOPIFY_API_KEY }}" >> $GITHUB_OUTPUT

      - name: Comment deployment status
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üöÄ **Shopify App Deployed Successfully!**
              
              **Environment:** ${{ github.event.inputs.environment || 'staging' }}
              **App URL:** ${{ steps.app-url.outputs.url }}
              **Commit:** ${{ github.sha }}
              
              The app has been deployed and is ready for testing.`
            })

      - name: Create deployment release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## üöÄ Lens Options Shopify App Release
            
            **Version:** ${{ github.ref }}
            **Environment:** ${{ github.event.inputs.environment || 'production' }}
            
            ### Changes
            - See commit history for detailed changes
            
            ### Deployment
            - App deployed to Shopify App Store
            - All tests passed
            - Security scan completed
            
            ### Installation
            Install from the Shopify App Store or use the development URL for testing.
          draft: false
          prerelease: false

  notify-deployment:
    name: Notify Deployment
    runs-on: ubuntu-latest
    needs: deploy-shopify-app
    if: always()
    
    steps:
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ needs.deploy-shopify-app.result }}
          channel: '#shopify-deployments'
          text: |
            üöÄ **Shopify App Deployment ${{ needs.deploy-shopify-app.result }}**
            
            **Environment:** ${{ github.event.inputs.environment || 'staging' }}
            **Branch:** ${{ github.ref_name }}
            **Commit:** ${{ github.sha }}
            
            ${{ needs.deploy-shopify-app.result == 'success' && '‚úÖ Deployment successful!' || '‚ùå Deployment failed!' }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

      - name: Notify email
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: 'Shopify App Deployment Failed - Lens Options'
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: 'CI/CD Bot <noreply@newvantageco.com>'
          body: |
            The Shopify app deployment has failed.
            
            **Environment:** ${{ github.event.inputs.environment || 'staging' }}
            **Branch:** ${{ github.ref_name }}
            **Commit:** ${{ github.sha }}
            **Workflow:** ${{ github.workflow }}
            
            Please check the GitHub Actions logs for more details.
